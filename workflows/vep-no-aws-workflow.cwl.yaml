#!/usr/bin/env cwl-runner

class: Workflow

requirements:
  - class: InlineJavascriptRequirement 
  - class: StepInputExpressionRequirement

inputs:
  - id: "#postgres_config"
    type: File
    description: "postgres config file"
  - id: "#host"
    type: string 
    description: "postgres host name"
  - id: "#vcf_source"
    type: string 
    description: "MuTect2, VarScan2, MuSE, or SomaticSniper"
  - id: "#input_vcf"
    type: File
    description: "The vcf file you want to annotate"
  - id: "#vcf_id"
    type: string
    description: "The VCF ID for output files."
  - id: "#src_vcf_id"
    type: string
    description: "The input (source) VCF ID."
  - id: "#case_id"
    type: string
    default: null
    description: "The case ID."
  - id: "#patient_barcode"
    type: string
    default: null
    description: "The patient barcode."
  - id: "#tumor_barcode"
    type: string
    default: null
    description: "The tumor sample barcode."
  - id: "#tumor_aliquot_uuid"
    type: string
    default: null
    description: "The tumor sample barcode."
  - id: "#tumor_bam_uuid"
    type: string
    default: null
    description: "The tumor BAM unique ID."
  - id: "#normal_barcode"
    type: string
    default: null
    description: "The normal sample barcode."
  - id: "#normal_aliquot_uuid"
    type: string
    default: null
    description: "The normal sample barcode."
  - id: "#normal_bam_uuid"
    type: string
    default: null
    description: "The normal BAM unique ID."
  - id: "#ref"
    type: File
    description: "path to tabix indexed and faidx indexed fasta file"
  - id: "#dir_cache"
    type: File 
    description: "path to the cache directory"
  - id: "#gdc_entrez"
    type: File 
    description: "path to the json file for the GDC_entrez plugin"
  - id: "#gdc_evidence"
    type: File 
    description: "path to the vcf file for the GDC_evidence plugin"
  - id: "#vcf"
    type: boolean
    default: null
    description: "output VCF format"
  - id: "#json"
    type: boolean
    default: null
    description: "output JSON format"
  - id: "#tab"
    type: boolean
    default: null
    description: "output TAB format"
  - id: "#stats_file"
    type: boolean
    default: null
    description: "if you want to also output the VEP stats file"
  - id: "#fork"
    type: int
    default: 1
    description: "vep threads"
  - id: "#fields"
    type: string
    default: null
    description: "configure the output format using a comma separated list of fields. Fields may be those present in the default output columns, or any of those that appear in the Extra column (including those added by plugins or custom annotations)."

outputs:
  - id: "vep_out"
    type: File
    source: "#vep.vep_out"
  - id: "vep_stats"
    type: File
    source: "#vep.stats_file"
  - id: "vep_log_file"
    type: File
    source: "#vep.log_file"
  - id: "vep_time_file"
    type: File
    source: "#vep.time_file"

steps:
  - id: "#contig-filter"
    run: {import: ../tools/contigfilter.cwl.yaml}
    inputs:
      - {id: "#contig-filter.input_vcf", source: "#input_vcf"}
      - {id: "#contig-filter.output_vcf", source: "#vcf_id", valueFrom: "$(self + '.contig_filter.vcf')"}
      - {id: "#contig-filter.patient_barcode", source: "#patient_barcode"}
      - {id: "#contig-filter.case_id", source: "#case_id"}
      - {id: "#contig-filter.tumor_barcode", source: "#tumor_barcode"}
      - {id: "#contig-filter.tumor_aliquot_uuid", source: "#tumor_aliquot_uuid"}
      - {id: "#contig-filter.tumor_bam_uuid", source: "#tumor_bam_uuid"}
      - {id: "#contig-filter.normal_barcode", source: "#normal_barcode"}
      - {id: "#contig-filter.normal_aliquot_uuid", source: "#normal_aliquot_uuid"}
      - {id: "#contig-filter.normal_bam_uuid", source: "#normal_bam_uuid"}
      - {id: "#contig-filter.vcf_source", source: "#vcf_source"}
    outputs:
      - id: "#contig-filter.vcf_out"
      - id: "#contig-filter.log_file"
      - id: "#contig-filter.time_file"
  - id: "#contig-filter-pg"
    run: {import: ../tools/pg_metrics.cwl.yaml}
    inputs:
      - {id: "#contig-filter-pg.tool", default: "contigfilter"}
      - {id: "#contig-filter-pg.time_file", source: "#contig-filter.time_file"}
      - {id: "#contig-filter-pg.normal_id", source: "#normal_bam_uuid"}
      - {id: "#contig-filter-pg.tumor_id", source: "#tumor_bam_uuid"}
      - {id: "#contig-filter-pg.input_uuid", source: "#src_vcf_id"}
      - {id: "#contig-filter-pg.output_uuid", source: "#vcf_id"}
      - {id: "#contig-filter-pg.case_id", source: "#case_id"}
      - {id: "#contig-filter-pg.postgres_config", source: "#postgres_config"}
      - {id: "#contig-filter-pg.host", source: "#host"}
    outputs: []
  - id: "#vep"
    run: {import: ../tools/vep.cwl.yaml}
    inputs:
      - {id: "#vep.input_file", source: "#contig-filter.vcf_out"}
      - {id: "#vep.fasta", source: "#ref"}
      - {id: "#vep.dir_cache", source: "#dir_cache"}
      - id: "#vep.output_file"
        source: ["#vcf_id", "#vcf", "#json", "#tab"]
        valueFrom: "$(self[1] ? self[0] + '.vep.vcf': self[2] ? self[0] + '.vep.json': self[0] + '.vep.tsv')"
      - {id: "#vep.vcf", source: "#vcf"}
      - {id: "#vep.json", source: "#json"}
      - {id: "#vep.tab", source: "#tab"}
      - {id: "#vep.stats_file", source: ["#stats_file", "#vcf_id"], valueFrom: "$(self[0] ? self[1] + '.vep.stats.txt' : null)" }
      - {id: "#vep.stats_text", source: "#stats_file" } 
      - {id: "#vep.no_stats", source: "#stats_file", valueFrom: "$(self ? null : true)"}
      - {id: "#vep.fork", source: "#fork"}
      - {id: "#vep.no_progress", valueFrom: "$(true)"} 
      - {id: "#vep.everything", valueFrom: "$(true)"}
      - {id: "#vep.xref_refseq", valueFrom: "$(true)"}
      - {id: "#vep.total_length", valueFrom: "$(true)"}
      - {id: "#vep.allele_number", valueFrom: "$(true)"}
      - {id: "#vep.check_alleles", valueFrom: "$(true)"}
      - {id: "#vep.assembly", valueFrom: "$('GRCh38')"}
      - {id: "#vep.gdc_entrez", source: "#gdc_entrez"} 
      - {id: "#vep.gdc_evidence", source: "#gdc_evidence"}
    outputs:
      - id: "#vep.vep_out"
      - id: "#vep.stats_file"
      - id: "#vep.warning_file"
      - id: "#vep.log_file"
      - id: "#vep.time_file"
  - id: "#vep-pg"
    run: {import: ../tools/pg_metrics.cwl.yaml}
    inputs:
      - {id: "#vep-pg.tool", default: "vep"}
      - {id: "#vep-pg.time_file", source: "#vep.time_file"}
      - {id: "#vep-pg.normal_id", source: "#normal_bam_uuid"}
      - {id: "#vep-pg.tumor_id", source: "#tumor_bam_uuid"}
      - {id: "#vep-pg.input_uuid", source: "#src_vcf_id"}
      - {id: "#vep-pg.output_uuid", source: "#vcf_id"}
      - {id: "#vep-pg.case_id", source: "#case_id"}
      - {id: "#vep-pg.postgres_config", source: "#postgres_config"}
      - {id: "#vep-pg.host", source: "#host"}
    outputs: []
